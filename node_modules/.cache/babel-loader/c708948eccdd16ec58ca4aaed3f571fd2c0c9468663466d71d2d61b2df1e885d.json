{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialAuthState = {\n  userData: [],\n  formValid: false,\n  form: {\n    email: true,\n    password: true\n  }\n};\nconst authSlicer = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    formValidHandler(state) {\n      state.formValid = true;\n    },\n    formHandler(state, action) {\n      state.form.email = action.payload.email;\n      state.form.password = action.payload.password;\n    },\n    userDataHandler(state, action) {\n      state.userData = action.payload.data;\n    }\n  }\n});\nexport const signIn = props => {\n  return async dispatch => {\n    const signinData = async () => {\n      const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/auth.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: props.username,\n          email: props.email,\n          password: props.password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('impossible signin');\n      }\n    };\n    try {\n      await signinData();\n    } catch (error) {}\n  };\n};\nexport const logIn = () => {\n  return async dispatch => {\n    const fetchUserData = async () => {\n      const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/auth.json');\n      if (!response.ok) {\n        throw new Error('something went wrong while fetching data');\n      }\n      const temp = await response.json();\n      const data = [];\n      for (const key in temp) {\n        data.push({\n          username: temp[key].username,\n          email: temp[key].email,\n          password: temp[key].password\n        });\n      }\n      dispatch(authActions.userDataHandler({\n        data\n      }));\n    };\n    try {\n      await fetchUserData();\n    } catch (error) {}\n  };\n};\nexport const authActions = authSlicer.actions;\nexport default authSlicer;","map":{"version":3,"names":["createSlice","initialAuthState","userData","formValid","form","email","password","authSlicer","name","initialState","reducers","formValidHandler","state","formHandler","action","payload","userDataHandler","data","signIn","props","dispatch","signinData","response","fetch","method","body","JSON","stringify","username","ok","Error","error","logIn","fetchUserData","temp","json","key","push","authActions","actions"],"sources":["F:/React/food-app/src/store/auth.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAuthState = {\r\n    userData : [],\r\n    formValid : false,\r\n    form : {email : true, password : true}\r\n} \r\n\r\nconst authSlicer = createSlice({\r\n    name : 'authentication',\r\n    initialState : initialAuthState,\r\n    reducers : {\r\n        formValidHandler(state){\r\n            state.formValid = true;\r\n        },\r\n        formHandler(state, action){\r\n            state.form.email = action.payload.email;\r\n            state.form.password = action.payload.password;\r\n        },\r\n        userDataHandler(state, action){\r\n            state.userData = action.payload.data;\r\n        }\r\n    }\r\n})\r\n\r\nexport const signIn =  (props) => {\r\n    return async (dispatch) => {\r\n        const signinData = async () => {\r\n            const response =  await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/auth.json',{\r\n                method : 'POST',\r\n                body : JSON.stringify({\r\n                    username : props.username,\r\n                    email : props.email,\r\n                    password : props.password\r\n                })\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('impossible signin')\r\n            }\r\n        }\r\n        try {\r\n            await signinData();\r\n        } catch (error) {\r\n            \r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const logIn = () => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        const  fetchUserData = async () => {\r\n            const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/auth.json');\r\n\r\n            if(!response.ok){\r\n                throw new Error('something went wrong while fetching data');\r\n            }\r\n\r\n            \r\n            const temp = await response.json();\r\n            \r\n            const data = [];\r\n            for(const key in temp){\r\n                data.push({\r\n                    username : temp[key].username,\r\n                    email: temp[key].email,\r\n                    password : temp[key].password\r\n                });\r\n            }\r\n            \r\n            dispatch(authActions.userDataHandler({data}));\r\n        }\r\n        try {\r\n            await fetchUserData();\r\n        } catch (error) {\r\n            \r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const authActions = authSlicer.actions;\r\nexport default authSlicer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACrBC,QAAQ,EAAG,EAAE;EACbC,SAAS,EAAG,KAAK;EACjBC,IAAI,EAAG;IAACC,KAAK,EAAG,IAAI;IAAEC,QAAQ,EAAG;EAAI;AACzC,CAAC;AAED,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC3BQ,IAAI,EAAG,gBAAgB;EACvBC,YAAY,EAAGR,gBAAgB;EAC/BS,QAAQ,EAAG;IACPC,gBAAgB,CAACC,KAAK,EAAC;MACnBA,KAAK,CAACT,SAAS,GAAG,IAAI;IAC1B,CAAC;IACDU,WAAW,CAACD,KAAK,EAAEE,MAAM,EAAC;MACtBF,KAAK,CAACR,IAAI,CAACC,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;MACvCO,KAAK,CAACR,IAAI,CAACE,QAAQ,GAAGQ,MAAM,CAACC,OAAO,CAACT,QAAQ;IACjD,CAAC;IACDU,eAAe,CAACJ,KAAK,EAAEE,MAAM,EAAC;MAC1BF,KAAK,CAACV,QAAQ,GAAGY,MAAM,CAACC,OAAO,CAACE,IAAI;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAKC,KAAK,IAAK;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,UAAU,GAAG,YAAY;MAC3B,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,8DAA8D,EAAC;QACzFC,MAAM,EAAG,MAAM;QACfC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;UAClBC,QAAQ,EAAGT,KAAK,CAACS,QAAQ;UACzBvB,KAAK,EAAGc,KAAK,CAACd,KAAK;UACnBC,QAAQ,EAAGa,KAAK,CAACb;QACrB,CAAC;MACL,CAAC,CAAC;MAEF,IAAG,CAACgB,QAAQ,CAACO,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACxC;IACJ,CAAC;IACD,IAAI;MACA,MAAMT,UAAU,EAAE;IACtB,CAAC,CAAC,OAAOU,KAAK,EAAE,CAEhB;EAEJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAM;EAEvB,OAAO,MAAOZ,QAAQ,IAAK;IAEvB,MAAOa,aAAa,GAAG,YAAY;MAC/B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,CAAC;MAE5F,IAAG,CAACD,QAAQ,CAACO,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;MAC/D;MAGA,MAAMI,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,EAAE;MAElC,MAAMlB,IAAI,GAAG,EAAE;MACf,KAAI,MAAMmB,GAAG,IAAIF,IAAI,EAAC;QAClBjB,IAAI,CAACoB,IAAI,CAAC;UACNT,QAAQ,EAAGM,IAAI,CAACE,GAAG,CAAC,CAACR,QAAQ;UAC7BvB,KAAK,EAAE6B,IAAI,CAACE,GAAG,CAAC,CAAC/B,KAAK;UACtBC,QAAQ,EAAG4B,IAAI,CAACE,GAAG,CAAC,CAAC9B;QACzB,CAAC,CAAC;MACN;MAEAc,QAAQ,CAACkB,WAAW,CAACtB,eAAe,CAAC;QAACC;MAAI,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,IAAI;MACA,MAAMgB,aAAa,EAAE;IACzB,CAAC,CAAC,OAAOF,KAAK,EAAE,CAEhB;EAEJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG/B,UAAU,CAACgC,OAAO;AAC7C,eAAehC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}