{"ast":null,"code":"import { uiActions } from \"./ui\";\nimport { cartItemsActions } from \"./cart\";\nexport const getMealCart = () => {\n  return async dispatch => {\n    const getData = async () => {\n      const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('could not get cart items');\n      }\n      const data = await response.json();\n      // console.log(data);\n      return data;\n    };\n    try {\n      let data = await getData();\n      // if(data.items===null){\n      //     data = {\n      //         items : [],\n      //         totalAmount : 0,\n      //         totalQuantity : 0\n      //     }\n      // }\n      dispatch(cartItemsActions.replace({\n        items: data.items || [],\n        totalAmount: data.totalAmount,\n        totalQuantity: data.totalQuantity,\n        changed: data.changed\n      }));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const putMealCart = cart => {\n  // console.log(cart);\n  // const items = cart.items===undefined ? [] : cart.items\n  return async dispatch => {\n    const putData = async () => {\n      const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/cart.json', {\n        method: \"PUT\",\n        body: JSON.stringify(cart\n        //     {\n        //     items: cart.items, \n        //     totalAmount: cart.totalAmount, \n        //     totalQuantity: cart.totalQuantity\n        // }\n        )\n      });\n\n      if (!response.ok) {\n        throw new Error('could not upload to the cart');\n      }\n    };\n    try {\n      await putData();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartItemsActions","getMealCart","dispatch","getData","response","fetch","ok","Error","data","json","replace","items","totalAmount","totalQuantity","changed","error","console","log","message","putMealCart","cart","putData","method","body","JSON","stringify"],"sources":["F:/React/food-app/src/store/cart-action.js"],"sourcesContent":["import { uiActions } from \"./ui\";\r\nimport { cartItemsActions } from \"./cart\";\r\nexport const getMealCart = () => {\r\n    return async(dispatch) => {\r\n        \r\n        const getData = async () => {\r\n            const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/cart.json');\r\n            if(!response.ok){\r\n                throw new Error('could not get cart items');\r\n                \r\n            }\r\n\r\n            const data = await response.json();\r\n            // console.log(data);\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            let data = await getData();\r\n            // if(data.items===null){\r\n            //     data = {\r\n            //         items : [],\r\n            //         totalAmount : 0,\r\n            //         totalQuantity : 0\r\n            //     }\r\n            // }\r\n            dispatch(cartItemsActions.replace({\r\n                items : data.items || [], \r\n                totalAmount: data.totalAmount, \r\n                totalQuantity: data.totalQuantity,\r\n                changed : data.changed\r\n            }));\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const putMealCart = (cart) => {\r\n    // console.log(cart);\r\n    // const items = cart.items===undefined ? [] : cart.items\r\n    return async(dispatch) => {\r\n        \r\n        const putData = async() => {\r\n            const response = await fetch('https://food-app-74f07-default-rtdb.firebaseio.com/cart.json',{\r\n                method : \"PUT\",\r\n                body : JSON.stringify(\r\n                    cart\r\n                //     {\r\n                //     items: cart.items, \r\n                //     totalAmount: cart.totalAmount, \r\n                //     totalQuantity: cart.totalQuantity\r\n                // }\r\n                )\r\n            });\r\n\r\n            if(!response.ok){\r\n                throw new Error('could not upload to the cart')\r\n            }\r\n        }\r\n\r\n        try {\r\n            await putData();\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,MAAM;AAChC,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,OAAO,MAAMC,WAAW,GAAG,MAAM;EAC7B,OAAO,MAAMC,QAAQ,IAAK;IAEtB,MAAMC,OAAO,GAAG,YAAY;MACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,CAAC;MAC5F,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAE/C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC;MACA,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,IAAIA,IAAI,GAAG,MAAML,OAAO,EAAE;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACAD,QAAQ,CAACF,gBAAgB,CAACU,OAAO,CAAC;QAC9BC,KAAK,EAAGH,IAAI,CAACG,KAAK,IAAI,EAAE;QACxBC,WAAW,EAAEJ,IAAI,CAACI,WAAW;QAC7BC,aAAa,EAAEL,IAAI,CAACK,aAAa;QACjCC,OAAO,EAAGN,IAAI,CAACM;MACnB,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;AACL,CAAC;AAID,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACjC;EACA;EACA,OAAO,MAAMlB,QAAQ,IAAK;IAEtB,MAAMmB,OAAO,GAAG,YAAW;MACvB,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,EAAC;QACxFiB,MAAM,EAAG,KAAK;QACdC,IAAI,EAAGC,IAAI,CAACC,SAAS,CACjBL;QACJ;QACA;QACA;QACA;QACA;QAAA;MAEJ,CAAC,CAAC;;MAEF,IAAG,CAAChB,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACnD;IACJ,CAAC;IAED,IAAI;MACA,MAAMc,OAAO,EAAE;IACnB,CAAC,CAAC,OAAON,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC9B;EAEJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}